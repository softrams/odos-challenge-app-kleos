plugins {
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot' version '2.7.6'
	id "com.github.node-gradle.node" version "3.5.0"
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.softrams.ecs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply from: 'database.gradle'

repositories {
	mavenCentral()
}

node {
	// visit documentation here: https://github.com/node-gradle/gradle-node-plugin/blob/3.5.0/docs/usage.md
	// Whether to download and install a specific Node.js version or not
	// If false, it will use the globally installed Node.js
	// If true, it will download node using above parameters
	// Note that npm is bundled with Node.js
	download = true

	// Version of node to download and install (only used if download is true)
	// It will be unpacked in the workDir
	version = "16.14.0"

	// Base URL for fetching node distributions
	// Only used if download is true
	// Change it if you want to use a mirror
	// Or set to null if you want to add the repository on your own.
	//distBaseUrl = "https://nodejs.org/dist"

	// Specifies whether it is acceptable to communicate with the Node.js repository over an insecure HTTP connection.
	// Only used if download is true
	// Change it to true if you use a mirror that uses HTTP rather than HTTPS
	// Or set to null if you want to use Gradle's default behaviour.
	allowInsecureProtocol = null

	// The npm command executed by the npmInstall task
	// By default it is install but it can be changed to ci
	npmInstallCommand = "install"

	// The directory where Node.js is unpacked (when download is true)
	workDir = file("${project.projectDir}/web-app/nodejs")

	// The directory where npm is installed (when a specific version is defined)
	npmWorkDir = file("${project.projectDir}/web-app/npm")

	// The Node.js project directory location
	// This is where the package.json file and node_modules directory are located
	// By default it is at the root of the current project
	nodeProjectDir = file("${project.projectDir}/web-app")

	// Whether the plugin automatically should add the proxy configuration to npm and yarn commands
	// according the proxy configuration defined for Gradle
	// Disable this option if you want to configure the proxy for npm or yarn on your own
	// (in the .npmrc file for instance)
	nodeProxySettings = ProxySettings.SMART
}

task npmInstallDependencies(type: NpmTask){
	dependsOn 'npmSetup'
	execOverrides {
		it.ignoreExitValue = true
		it.workingDir = 'web-app'
	}
	args = ['install']
}

task npmBuild(type: NpmTask){
	dependsOn 'npmInstallDependencies'
	execOverrides {
		it.workingDir = 'web-app'
	}
	args = ['run', 'build']
}

task copyFrontendToBuild(type: Copy){
	dependsOn 'npmBuild'
	from "$projectDir/web-app/build"
	into "$buildDir/resources/main/static"
}

processResources {
	dependsOn 'copyFrontendToBuild'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
