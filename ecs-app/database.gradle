configurations {
   liquibaseConfig
}
repositories {
	mavenCentral()
}

dependencies {
  liquibaseConfig ('org.postgresql:postgresql:9.4-1201-jdbc4')
  liquibaseConfig ('org.liquibase:liquibase-core:4.9.1'){
       exclude group: 'org.codehaus.plexus'
  }
}

if(System.getenv('PSQL_BIN') == null ){
    //default location for mac
    ext.psql = "usr/local/bin/psql"
}else{
    ext.psql = System.getenv('PSQL_BIN')
}

def runpsql(String sqlFile, String db){
   println "Running " + sqlFile
   exec {
       ignoreExitValue true
       environment 'PGPASSWORD', "${dbPassword}"
       executable psql
       args '-h', "${dbHost}", '-p', "${dbPort}", '-U', "${dbAdmin}", '-d', "${db}", '-f', "${sqlFile}",
            '-v', "dbName= ${dbName}",
            '-v', "dbAdmin= ${dbAdmin}",
            '-v', "dbSchema= ${dbSchema}",
            '-v', "liquibaseSchema= ${liquibaseSchema}",
            '-v', "dbAppRole= ${dbAppRole}",
            '-v', "dbAppUser= ${dbAppUser}",
            '-v', "dbAppUserPassword= ${dbAppUserPassword}"
   }
}

task update (dependsOn: configurations.liquibaseConfig, type: JavaExec){
   classpath configurations.liquibaseConfig
   main = 'liquibase.integration.commandline.Main'
   println "Using schema.. ${dbSchema}"
   println "Using liquibaseSchema.. ${liquibaseSchema}"
   args "--changelogFile=${changelogFile}", 
        "--url=jdbc:postgresql://${dbHost}:${dbPort}/${dbName}?currentSchema=${dbSchema}",
        "--username=${dbAdmin}",
        "--password=${dbPassword}",
        "--liquibaseSchemaName=${liquibaseSchema}", 
        'update'
}

task baseline doLast {
    runpsql('db/baseline/drop-schema.sql', "${dbName}")
    runpsql('db/baseline/drop-db.sql', 'postgres')
    runpsql('db/baseline/drop-user.sql', 'postgres')
    runpsql('db/baseline/create-db.sql', 'postgres')
    runpsql('db/baseline/initialize-db.sql', "${dbName}")
}

update.setDependsOn([])
update.shouldRunAfter baseline